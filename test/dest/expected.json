[
  {
    "comment": "/**\n * @module test\n */",
    "meta": {
      "filename": "index.js",
      "lineno": 1,
      "columnno": 0,
      "code": {}
    },
    "kind": "module",
    "name": "test",
    "longname": "module:test"
  },
  {
    "comment": "/**\n * @param {module:proj4} proj4 Proj4\n */",
    "meta": {
      "range": [
        122,
        172
      ],
      "filename": "index.js",
      "lineno": 10,
      "columnno": 0,
      "code": {
        "name": "exports.register",
        "type": "FunctionDeclaration",
        "paramnames": [
          "proj4"
        ]
      }
    },
    "params": [
      {
        "type": {
          "names": [
            "module:proj4"
          ]
        },
        "description": "Proj4",
        "name": "proj4"
      }
    ],
    "name": "register",
    "longname": "module:test.register",
    "kind": "function",
    "memberof": "module:test",
    "scope": "static"
  },
  {
    "comment": "",
    "meta": {
      "range": [
        129,
        172
      ],
      "filename": "index.js",
      "lineno": 10,
      "columnno": 7,
      "code": {
        "name": "register",
        "type": "FunctionDeclaration",
        "paramnames": [
          "proj4"
        ]
      }
    },
    "undocumented": true,
    "name": "register",
    "longname": "module:test.register",
    "kind": "function",
    "scope": "static",
    "memberof": "module:test",
    "params": []
  },
  {
    "comment": "/**\n * @param {module:geojson~Geometry} geometry The geometry.\n * @return {Array<number>} The bounding box.\n */",
    "meta": {
      "range": [
        289,
        381
      ],
      "filename": "index.js",
      "lineno": 18,
      "columnno": 0,
      "code": {
        "name": "exports.getBounds",
        "type": "FunctionDeclaration",
        "paramnames": [
          "geometry"
        ]
      }
    },
    "params": [
      {
        "type": {
          "names": [
            "module:geojson~Geometry"
          ]
        },
        "description": "The geometry.",
        "name": "geometry"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "Array.<number>"
          ]
        },
        "description": "The bounding box."
      }
    ],
    "name": "getBounds",
    "longname": "module:test.getBounds",
    "kind": "function",
    "memberof": "module:test",
    "scope": "static"
  },
  {
    "comment": "",
    "meta": {
      "range": [
        296,
        381
      ],
      "filename": "index.js",
      "lineno": 18,
      "columnno": 7,
      "code": {
        "name": "getBounds",
        "type": "FunctionDeclaration",
        "paramnames": [
          "geometry"
        ]
      }
    },
    "undocumented": true,
    "name": "getBounds",
    "longname": "module:test.getBounds",
    "kind": "function",
    "scope": "static",
    "memberof": "module:test",
    "params": []
  },
  {
    "comment": "/**\n * @param {number} number A number.\n * @return {module:test/sub/NumberStore~NumberStore} A number store.\n */",
    "meta": {
      "range": [
        495,
        573
      ],
      "filename": "index.js",
      "lineno": 26,
      "columnno": 0,
      "code": {
        "name": "exports.getNumberStore",
        "type": "FunctionDeclaration",
        "paramnames": [
          "number"
        ]
      }
    },
    "params": [
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "A number.",
        "name": "number"
      }
    ],
    "returns": [
      {
        "type": {
          "names": [
            "module:test/sub/NumberStore~NumberStore"
          ]
        },
        "description": "A number store."
      }
    ],
    "name": "getNumberStore",
    "longname": "module:test.getNumberStore",
    "kind": "function",
    "memberof": "module:test",
    "scope": "static"
  },
  {
    "comment": "",
    "meta": {
      "range": [
        502,
        573
      ],
      "filename": "index.js",
      "lineno": 26,
      "columnno": 7,
      "code": {
        "name": "getNumberStore",
        "type": "FunctionDeclaration",
        "paramnames": [
          "number"
        ]
      }
    },
    "undocumented": true,
    "name": "getNumberStore",
    "longname": "module:test.getNumberStore",
    "kind": "function",
    "scope": "static",
    "memberof": "module:test",
    "params": []
  },
  {
    "comment": "",
    "meta": {
      "range": [
        562,
        568
      ],
      "filename": "index.js",
      "lineno": 27,
      "columnno": 26,
      "code": {
        "name": "number",
        "type": "Identifier",
        "value": "number"
      }
    },
    "undocumented": true,
    "name": "number",
    "longname": "module:test~number",
    "kind": "member",
    "scope": "inner",
    "memberof": "module:test"
  },
  {
    "comment": "/**\n * @type {{a: number; b: string;c:{a:number},d: {a:number;b:string,c:number }; e: \"{a: number; b: string;}\"; }}\n */",
    "meta": {
      "range": [
        695,
        752
      ],
      "filename": "index.js",
      "lineno": 33,
      "columnno": 0,
      "code": {
        "name": "exports.interfaceSeparators",
        "type": "VariableDeclaration"
      }
    },
    "type": {
      "names": [
        "Object"
      ]
    },
    "name": "interfaceSeparators",
    "longname": "module:test.interfaceSeparators",
    "kind": "constant",
    "memberof": "module:test",
    "scope": "static"
  },
  {
    "comment": "",
    "meta": {
      "range": [
        708,
        751
      ],
      "filename": "index.js",
      "lineno": 33,
      "columnno": 13,
      "code": {
        "name": "interfaceSeparators",
        "type": "ObjectExpression",
        "value": "{\"a\":1,\"b\":\"2\"}"
      }
    },
    "undocumented": true,
    "name": "interfaceSeparators",
    "longname": "module:test~interfaceSeparators",
    "kind": "constant",
    "scope": "inner",
    "memberof": "module:test",
    "params": []
  },
  {
    "comment": "",
    "meta": {
      "range": [
        734,
        738
      ],
      "filename": "index.js",
      "lineno": 34,
      "columnno": 2,
      "code": {
        "name": "a",
        "type": "Literal",
        "value": 1
      }
    },
    "undocumented": true,
    "name": "a",
    "longname": "module:test~interfaceSeparators.a",
    "kind": "member",
    "memberof": "module:test~interfaceSeparators",
    "scope": "static"
  },
  {
    "comment": "",
    "meta": {
      "range": [
        742,
        748
      ],
      "filename": "index.js",
      "lineno": 35,
      "columnno": 2,
      "code": {
        "name": "b",
        "type": "Literal",
        "value": "2"
      }
    },
    "undocumented": true,
    "name": "b",
    "longname": "module:test~interfaceSeparators.b",
    "kind": "member",
    "memberof": "module:test~interfaceSeparators",
    "scope": "static"
  },
  {
    "comment": "/**\n * @type {(...args: Parameters<Class<getNumberStore>>) => void}\n */",
    "meta": {
      "range": [
        826,
        874
      ],
      "filename": "index.js",
      "lineno": 41,
      "columnno": 0,
      "code": {
        "name": "exports.tsFunctionSyntax",
        "type": "VariableDeclaration"
      }
    },
    "type": {
      "names": [
        "function"
      ]
    },
    "name": "tsFunctionSyntax",
    "longname": "module:test.tsFunctionSyntax",
    "kind": "constant",
    "memberof": "module:test",
    "scope": "static"
  },
  {
    "comment": "",
    "meta": {
      "range": [
        839,
        873
      ],
      "filename": "index.js",
      "lineno": 41,
      "columnno": 13,
      "code": {
        "name": "tsFunctionSyntax",
        "type": "ArrowFunctionExpression"
      }
    },
    "undocumented": true,
    "name": "tsFunctionSyntax",
    "longname": "module:test~tsFunctionSyntax",
    "kind": "function",
    "scope": "inner",
    "memberof": "module:test",
    "params": []
  },
  {
    "comment": "/**\n * @type {(a: () => void | (a: {a: string; b: number;}) => void) => void}\n */",
    "meta": {
      "range": [
        958,
        1012
      ],
      "filename": "index.js",
      "lineno": 46,
      "columnno": 0,
      "code": {
        "name": "exports.tsFunctionSyntaxNested",
        "type": "VariableDeclaration"
      }
    },
    "type": {
      "names": [
        "function"
      ]
    },
    "name": "tsFunctionSyntaxNested",
    "longname": "module:test.tsFunctionSyntaxNested",
    "kind": "constant",
    "memberof": "module:test",
    "scope": "static"
  },
  {
    "comment": "",
    "meta": {
      "range": [
        971,
        1011
      ],
      "filename": "index.js",
      "lineno": 46,
      "columnno": 13,
      "code": {
        "name": "tsFunctionSyntaxNested",
        "type": "ArrowFunctionExpression"
      }
    },
    "undocumented": true,
    "name": "tsFunctionSyntaxNested",
    "longname": "module:test~tsFunctionSyntaxNested",
    "kind": "function",
    "scope": "inner",
    "memberof": "module:test",
    "params": []
  },
  {
    "comment": "/**\n * @type {function(number): void}\n */",
    "meta": {
      "range": [
        1056,
        1107
      ],
      "filename": "index.js",
      "lineno": 51,
      "columnno": 0,
      "code": {
        "name": "exports.jsdocFunctionSyntax",
        "type": "VariableDeclaration"
      }
    },
    "type": {
      "names": [
        "function"
      ]
    },
    "name": "jsdocFunctionSyntax",
    "longname": "module:test.jsdocFunctionSyntax",
    "kind": "constant",
    "memberof": "module:test",
    "scope": "static"
  },
  {
    "comment": "",
    "meta": {
      "range": [
        1069,
        1106
      ],
      "filename": "index.js",
      "lineno": 51,
      "columnno": 13,
      "code": {
        "name": "jsdocFunctionSyntax",
        "type": "ArrowFunctionExpression"
      }
    },
    "undocumented": true,
    "name": "jsdocFunctionSyntax",
    "longname": "module:test~jsdocFunctionSyntax",
    "kind": "function",
    "scope": "inner",
    "memberof": "module:test",
    "params": []
  },
  {
    "comment": "/**\n * @type {interfaceSeparators['a']}\n */",
    "meta": {
      "range": [
        1153,
        1186
      ],
      "filename": "index.js",
      "lineno": 56,
      "columnno": 0,
      "code": {
        "name": "exports.bracketNotation",
        "type": "VariableDeclaration"
      }
    },
    "type": {
      "names": [
        "interfaceSeparators.a"
      ]
    },
    "name": "bracketNotation",
    "longname": "module:test.bracketNotation",
    "kind": "constant",
    "memberof": "module:test",
    "scope": "static"
  },
  {
    "comment": "",
    "meta": {
      "range": [
        1166,
        1185
      ],
      "filename": "index.js",
      "lineno": 56,
      "columnno": 13,
      "code": {
        "name": "bracketNotation",
        "type": "Literal",
        "value": 1
      }
    },
    "undocumented": true,
    "name": "bracketNotation",
    "longname": "module:test~bracketNotation",
    "kind": "constant",
    "scope": "inner",
    "memberof": "module:test",
    "params": []
  },
  {
    "comment": "/** @ignore */",
    "meta": {
      "range": [
        434,
        465
      ],
      "filename": "LeadingComments.js",
      "lineno": 14,
      "columnno": 0,
      "code": {
        "name": "exports.LeadingComments",
        "type": "ClassDeclaration"
      }
    },
    "ignore": true,
    "name": "LeadingComments",
    "longname": "LeadingComments",
    "kind": "class",
    "scope": "global"
  },
  {
    "comment": "/**\n * Doclet\n */",
    "meta": {
      "range": [
        441,
        465
      ],
      "filename": "LeadingComments.js",
      "lineno": 14,
      "columnno": 7,
      "code": {
        "name": "LeadingComments",
        "type": "ClassDeclaration",
        "paramnames": []
      }
    },
    "classdesc": "Doclet",
    "name": "LeadingComments",
    "longname": "LeadingComments",
    "kind": "class",
    "scope": "global"
  },
  {
    "comment": "/**\n * @module test/sub/NumberStore\n */",
    "meta": {
      "filename": "NumberStore.js",
      "lineno": 1,
      "columnno": 0,
      "code": {}
    },
    "kind": "module",
    "name": "test/sub/NumberStore",
    "longname": "module:test/sub/NumberStore"
  },
  {
    "comment": "/**\n * @typedef {Object} Options\n * @property {number} number A number.\n */",
    "meta": {
      "filename": "NumberStore.js",
      "lineno": 5,
      "columnno": 0,
      "code": {}
    },
    "kind": "typedef",
    "name": "Options",
    "type": {
      "names": [
        "Object"
      ]
    },
    "properties": [
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "A number.",
        "name": "number"
      }
    ],
    "longname": "module:test/sub/NumberStore~Options",
    "scope": "inner",
    "memberof": "module:test/sub/NumberStore"
  },
  {
    "comment": "/**\n * @classdesc\n * A test class.\n */",
    "meta": {
      "range": [
        157,
        435
      ],
      "filename": "NumberStore.js",
      "lineno": 14,
      "columnno": 0,
      "code": {
        "name": "NumberStore",
        "type": "ClassDeclaration",
        "paramnames": [
          "options"
        ]
      }
    },
    "classdesc": "A test class.",
    "name": "NumberStore",
    "longname": "module:test/sub/NumberStore~NumberStore",
    "kind": "class",
    "scope": "inner",
    "memberof": "module:test/sub/NumberStore",
    "undocumented": true
  },
  {
    "comment": "/**\n   * @param {module:test/sub/NumberStore~Options} options The options.\n   */",
    "meta": {
      "range": [
        234,
        346
      ],
      "filename": "NumberStore.js",
      "lineno": 18,
      "columnno": 2,
      "code": {
        "name": "NumberStore",
        "type": "MethodDefinition",
        "paramnames": [
          "options"
        ]
      },
      "vars": {
        "": null
      }
    },
    "params": [
      {
        "type": {
          "names": [
            "module:test/sub/NumberStore~Options"
          ]
        },
        "description": "The options.",
        "name": "options"
      }
    ],
    "name": "NumberStore",
    "longname": "module:test/sub/NumberStore~NumberStore",
    "kind": "class",
    "memberof": "module:test/sub/NumberStore",
    "scope": "inner",
    "undocumented": true
  },
  {
    "comment": "/**\n * @classdesc\n * A test class.\n */",
    "meta": {
      "range": [
        157,
        435
      ],
      "filename": "NumberStore.js",
      "lineno": 14,
      "columnno": 0,
      "code": {
        "name": "NumberStore",
        "type": "ClassDeclaration",
        "paramnames": [
          "options"
        ]
      }
    },
    "name": "NumberStore",
    "longname": "module:test/sub/NumberStore~NumberStore",
    "kind": "class",
    "classdesc": "A test class.",
    "scope": "inner",
    "memberof": "module:test/sub/NumberStore",
    "params": [
      {
        "type": {
          "names": [
            "module:test/sub/NumberStore~Options"
          ]
        },
        "description": "The options.",
        "name": "options"
      }
    ]
  },
  {
    "comment": "/**\n     * @type {number}\n     * @private\n     */",
    "meta": {
      "range": [
        315,
        341
      ],
      "filename": "NumberStore.js",
      "lineno": 23,
      "columnno": 4,
      "code": {
        "name": "this.num_",
        "type": "MemberExpression",
        "value": "options.number",
        "paramnames": []
      }
    },
    "type": {
      "names": [
        "number"
      ]
    },
    "access": "private",
    "name": "num_",
    "longname": "module:test/sub/NumberStore~NumberStore#num_",
    "kind": "member",
    "memberof": "module:test/sub/NumberStore~NumberStore",
    "scope": "instance"
  },
  {
    "comment": "/**\n   * @return {number} A number.\n   */",
    "meta": {
      "range": [
        394,
        433
      ],
      "filename": "NumberStore.js",
      "lineno": 29,
      "columnno": 2,
      "code": {
        "name": "NumberStore#getNumber",
        "type": "MethodDefinition",
        "paramnames": []
      },
      "vars": {
        "": null
      }
    },
    "returns": [
      {
        "type": {
          "names": [
            "number"
          ]
        },
        "description": "A number."
      }
    ],
    "name": "getNumber",
    "longname": "module:test/sub/NumberStore~NumberStore#getNumber",
    "kind": "function",
    "memberof": "module:test/sub/NumberStore~NumberStore",
    "scope": "instance",
    "params": []
  },
  {
    "comment": "",
    "meta": {
      "range": [
        437,
        464
      ],
      "filename": "NumberStore.js",
      "lineno": 34,
      "columnno": 0,
      "code": {
        "name": "module.exports",
        "type": "Identifier"
      }
    },
    "undocumented": true,
    "name": "module:test/sub/NumberStore",
    "longname": "module:test/sub/NumberStore",
    "kind": "member"
  }
]